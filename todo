
gf for javascript require

mapping for Gvdiff + Gstatus

mapping for cd to current file

can't paste into LeaderF line


shortcuts for copy to clipboard  (eg \Yi" ) with motion

how to surround lines with try/catch (except) => Using VISUAL snippets

how to surround argument(s) with function and parethesis => using snippet pa<TAB> ? 
wrapper to take constructor params and set this/self.  - not sure which plugin

create snippets:
    python class + init
    borg pattern
    bash script with args


filtering NERDTree:
   only show *.xml in NERDTree

operator for javascript 'f' => function

using ack
    mapping from 'project root' (no cr)
    mapping from current search  (no cr)
    mapping from current filetype (eg --py) (no cr)

lightline - 
    show ic / etc ?


mapping for Camelcase word
https://github.com/bkad/CamelCaseMotion

setup home/work/all plugins 
    source plugins.vim (all)
    source $PLUGINS (csv)
    settings for each plugin could be added in these files
    - there's only one work plugin (localrc), so not yet



big:
function to choose random colorscheme, and function to delete it


learn :help pattern-overview

Plugins to learn:
    switch
    fugitive
    vim-signature
    vim-speeddating
    vim-localrc     - for work addons
    targets


Possible Plugins to install:
    vim-bumblebee (https://github.com/PeterRincker/vim-bumblebee)
        fuzzy buffer switching

    vim-vinegar (https://www.youtube.com/watch?v=OgQW07saWb0)

    https://github.com/tpope/vim-projectionist
        projections (https://www.youtube.com/watch?v=3jDafvUESbs

    https://github.com/AndrewRadev/sideways.vim
        Move function arguments left or right

    https://github.com/dbakker/vim-projectroot
        Find out which project a file belongs to, easy to use in scripts/mappings

    https://github.com/kana/vim-textobj-indent OR https://github.com/michaeljsmith/vim-indent-object
        Text objects for indented blocks

    https://github.com/christoomey/vim-sort-motion
        Sort by lines, visual, indentation (requires vim-textobj-indent)

    https://github.com/vimwiki/vimwiki
        Personal Wiki for Vim

    https://github.com/coderifous/textobj-word-column.vim
        Adds text-objects for word-based columns

    Plugin for numbering

    Plugin for working with python



--------------------------------------------------------------------------------


fugituve bindings:   EG: 
" fugitive git bindings
nnoremap <space>ga :Git add %:p<CR><CR>
nnoremap <space>gs :Gstatus<CR>
nnoremap <space>gc :Gcommit -v -q<CR>
nnoremap <space>gt :Gcommit -v -q %:p<CR>
nnoremap <space>gd :Gdiff<CR>
nnoremap <space>ge :Gedit<CR>
nnoremap <space>gr :Gread<CR>
nnoremap <space>gw :Gwrite<CR><CR>
nnoremap <space>gl :silent! Glog<CR>:bot copen<CR>
nnoremap <space>gp :Ggrep<Space>
nnoremap <space>gm :Gmove<Space>
nnoremap <space>gb :Git branch<Space>
nnoremap <space>go :Git checkout<Space>
nnoremap <space>gps :Dispatch! git push<CR>
nnoremap <space>gpl :Dispatch! git pull<CR>




consider using localleader for commands specific to a buffer (usewith with autocmds?)
Non greedy quantifiers
using cdpath
cindenting
folding 

learn expand(), eg :e %:r.h


--------------------------------------------------------------------------------
  
renumber: http://www.vim.org/scripts/script.php?script_id=189 OR VisIncr: https://github.com/vim-scripts/VisIncr
textobj-word-column: https://github.com/coderifous/textobj-word-column.vim



--------------------------------------------------------------------------------
enable/disable autoread/autowrite modes: 
eg:
	

" autoread and autowrite
augroup save
  au!
  au FocusLost * wall
augroup END
set nohidden
set nobackup
set noswapfile
set nowritebackup
set autoread
set autowrite
set autowriteall

" see help persistent-undo
set undodir=~/.vim/undo
set undofile

