todo:
    python:  
        convert between lists of value=pair to dictionary instances

    vimwiki

    command line args for filtering NERDTree:
        vim -X *.xml => only show *.xml in NERDTree

    mapping for inserting gmail / work email

    mapping for switching all paths to windows / unix using %s

    learn targets.vim

    new plugins:
        https://github.com/dbakker/vim-projectroot
        https://github.com/christoomey/vim-sort-motion
        https://github.com/vim-scripts/ReplaceWithRegister
        https://github.com/michaeljsmith/vim-indent-object
        https://github.com/tpope/vim-vinegar

    function which searches for virtualenv directories  
        and adds to 
            g:gutentags_exclude_project_root
            g:ctrlp_custom_ignore
            agignore (in vim?)


  using gutentags [and how it works with tagbar]
    does gutentags rootmarkers override default set ones
    ignore directories

  fugitive mappings
  snippets
    python start class:
        class XXX(Y):
            def __init__(self, ZZZ):
                fin


--------------------------------------------------------------------------------


fugituve bindings:   EG: 
" fugitive git bindings
nnoremap <space>ga :Git add %:p<CR><CR>
nnoremap <space>gs :Gstatus<CR>
nnoremap <space>gc :Gcommit -v -q<CR>
nnoremap <space>gt :Gcommit -v -q %:p<CR>
nnoremap <space>gd :Gdiff<CR>
nnoremap <space>ge :Gedit<CR>
nnoremap <space>gr :Gread<CR>
nnoremap <space>gw :Gwrite<CR><CR>
nnoremap <space>gl :silent! Glog<CR>:bot copen<CR>
nnoremap <space>gp :Ggrep<Space>
nnoremap <space>gm :Gmove<Space>
nnoremap <space>gb :Git branch<Space>
nnoremap <space>go :Git checkout<Space>
nnoremap <space>gps :Dispatch! git push<CR>
nnoremap <space>gpl :Dispatch! git pull<CR>



tasks:

--------------------------------------------------------------------------------
2.  idea for loading Domain specific VIMRC files
     use ENV vars and separate vimrcs:
    eg:
        enable python specific development  PYVIM=~/.vim/rcs/python_vimrc 
        enable work specific stuff  WORKVIM=~/.vim/rcs/work_vimrc    [ eg. coffeescript ]


consider using localleader for commands specific to a buffer (usewith with autocmds?)
Non greedy quantifiers
using cdpath
cindenting
folding 

mechanism for auto loading of tags 
	if tags in current ( project ) directory load tags 
  if .autoctag in directory regen ctags

function to change font size

useful:
--------------------------------------------------------------------------------
open header =>   :e %:r.h

plugins:
--------------------------------------------------------------------------------
  
octave
ack (vim plugin) or EasyGrep
renumber: http://www.vim.org/scripts/script.php?script_id=189 OR VisIncr: https://github.com/vim-scripts/VisIncr
textobj-word-column: https://github.com/coderifous/textobj-word-column.vim



--------------------------------------------------------------------------------
enable/disable autoread/autowrite modes: 
eg:
	

" autoread and autowrite
augroup save
  au!
  au FocusLost * wall
augroup END
set nohidden
set nobackup
set noswapfile
set nowritebackup
set autoread
set autowrite
set autowriteall

" see help persistent-undo
set undodir=~/.vim/undo
set undofile

